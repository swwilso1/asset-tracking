/**
* The data api used as simulator to simulate the payloads sent from the devices
* It call the Ingest Api with payload with random data 
* @module data
* @return{Array} 2 items , the ingest call response , the generated data
*
*/
//Running this simulator, virtualize a conduit call to the advanced app ingest api.
var http = require("http");
var subdomain = require("subdomain");
var log = require("log");
log.setLevel("INFO");

// Load user subdomains
var listSubdomainsResult =   subdomain.list();

if(listSubdomainsResult.metadata && listSubdomainsResult.metadata.status == "success") {
    if(listSubdomainsResult.result && listSubdomainsResult.result.subdomains &&listSubdomainsResult.result.subdomains.length > 0) {
        
        //Build the url of the ingest api
        const  api= "https://"+ listSubdomainsResult.result.subdomains[0].name + ".scriptrapps.io/asset-tracking/api/ingest";
        
        var devices = [{id:'xh2345', lat: "40.7411", long: "-73.9816"}, {id:'mf2345',  lat: "40.74", long: "-73.9899"}, {id:'yz2345',  lat: "40.7419", long: "-73.9892"}];
        var randomDevice = devices[Math.floor(Math.random() * devices.length)]
        //Generate random data to simulate the device data
        var dataSnap =
            {
                "id": randomDevice.id,
                "level": getRandomInt(0,255),
                "power": getRandomInt(0,3000),
//                "temperature": 40,//getRandomInt(0,50),
//                "luminosity": getRandomArbitrary(0,30000),
//                "pressure": getRandomInt(0,140000),
                "location":{
                    "lat": randomDevice.lat,
                    "lon": randomDevice.long
                },
                "gps_status": getRandomInt(0,1)
            };
        log.info("Generated Data : "+ JSON.stringify(dataSnap));
        
        //Call the ingest api, with randomly generated data
        var callResult = http.request({
            "url" : api,
            "method":"POST",
            "bodyString":JSON.stringify(dataSnap),
            "headers":{
                "Content-Type":"application/json"
            }
        });
        
        return [callResult, dataSnap];
        
    } else {
        return "No subdomain set for your account. Please setup a subdomain in order to run the simulator.";
    }
} else {
    	return "Unable to call the quick start application [\"/asset-tracking/api/ingest\"] api. Failure to load your account subdomain property."
}

/**
* Random Int limits included
* 
* @function getRandomInt
* @param {Number} [min] the minimum limit
* @param {Number} [max] the maximum limit
* @return{Number} the generated Random Int
*
*/
function getRandomInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}
/**
* Random Arbitrary
* 
* @function getRandomArbitrary
* @param {Number} [min] the minimum limit
* @param {Number} [max] the maximum limit
* @return{Number} the generated Random Arbitrary
*
*/
function getRandomArbitrary(min, max) {
    return Math.random() * (max - min) + min;
}
